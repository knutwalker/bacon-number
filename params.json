{"name":"Bacon-number","tagline":"Calculates the Bacon Number based upon the Neo4j example data","body":"bacon-number\r\n============\r\n\r\nCalculates the [Bacon Number](http://en.wikipedia.org/wiki/Bacon_number#Bacon_numbers) based upon the Neo4j example data\r\n\r\n### Usage ###\r\n\r\nYou'll need to have [Neo4j](http://www.neo4j.org/) running and populated with a data set about movies and actors.\r\nNeo4j comes with such a data set as an example. The essential relationship is `(:Person)-[:ACTED_IN]->(:Movie)`\r\n\r\nOn *NIX, you can install Neo4j as follows\r\n\r\n    wget -qO- http://dist.neo4j.org/neo4j-community-2.0.0-M06-unix.tar.gz | tar xzf -\r\n    cd neo4j-community-2.0.0-M06/\r\n    bin/neo4j start\r\n    # open http://localhost:7474/browser/\r\n    # stop with bin/neo4j stop\r\n\r\nIn this UI, type in `:play movies` and follow the instructions until the data in imported\r\n(which will take a couple of secs).\r\n\r\nThen, to start the python app, you'll have to install [flask](http://flask.pocoo.org/docs/installation/) and\r\n[requests](http://www.python-requests.org/en/v2.0-0/user/install/#install).\r\nOr you can just `pip install -r requirements.txt` in your favourite virtualenv.\r\n\r\nEither way, start the app by\r\n\r\n    python bacon_number.py\r\n\r\nFor more options, see `python bacon_number.py --help`\r\n\r\n### API\r\n\r\nThe app has two endpoints:\r\n\r\n- /\\<actor>\r\n\r\n  This will calculate the Bacon Number for the given author\r\n\r\n- /\\<actor>/\\<some\\_other\\_actor>\r\n\r\n  This will calculate the distance between the two given authors. (some\\_other\\_author is treated as Kevin Bacon)\r\n\r\nThe output format is shamelessly ripped off of [Google](https://www.google.com/#q=bacon+number+of+keanu+reeves)\r\n\r\n\r\n### The Query\r\n\r\nThe [Cypher](http://www.neo4j.org/learn/cypher) Query to retrieve the Bacon Number and its intermediate steps is\r\n\r\n\tMATCH\r\n\t\tp=shortestPath((kevin:Person)-[r:ACTED_IN*]-(actor))\r\n\tWHERE\r\n\t\tkevin.name={kevin} AND actor.name={actor}\r\n\tRETURN\r\n\t\tlength([m in nodes(p) WHERE m:Movie]) as BaconNumber,\r\n\t\t[m in nodes(p) WHERE m:Movie | m.title] as Movies,\r\n\t\t[a in nodes(p) WHERE a:Person | a.name][1..-1] as KnowsActors\r\n\r\n`{kevin}` and `{actor}` are substituted with the given actor names.\r\n\r\n","google":"UA-45861502-1","note":"Don't delete this file! It's used internally to help with page regeneration."}